<<<<<<< HEAD
{-# OPTIONS_GHC -F -pgmF htfpp #-}
-----------------------------------------------------------------------------
=======
-----------------------------------------------------------------
>>>>>>> 82efcab6e4dd6446a219a3c402ffa6695ad2ee1a
--
-- Module      :   a test for HTF framework
-- insert {-@ HTF_TESTS @-} for each import
-----------------------------------------------------------------------------
{-# LANGUAGE OverloadedStrings     #-}

module Main     where      -- must have Main (main) or Main where


-- import System.Exit
import Uniform.FileIO
import Lib.ProcPandocDatei

import           Test.Framework
-- import {-@ HTF_TESTS @-} Lib.FileHandling_test
-- import {-@ HTF_TESTS @-} Lib.ProcWord_test
-- import {-@ HTF_TESTS @-} Lib.ProcTxt_test
import {-@ HTF_TESTS @-} Lib.ProcPandocDatei_test

main :: IO ()
main =  main2

main1 :: IO ()
main1 = do  -- with tests in other modules
    putStrLn "HTF ExampleTest.hs:\n"
    p <- htfMain htf_importedTests
    putStrLn ("HTF end StringConversion.hs test:\n"
         ++ show p)
    return ()

main2 :: IO ()
main2 = do
<<<<<<< HEAD
    putIOwordsT ["main2 start -----------"]
    let erlfn = makeAbsFile "/home/frank/Workspace8/replaceUmlaut/nichtUmlaute.txt" :: Path Abs File
    let testfn1 = makeAbsFile "/home/frank/Workspace8/replaceUmlaut/testMarkdown0.md":: Path Abs File
    res <- runErr $  procMd True erlfn testfn1
    putIOwords ["res after 1", showT res] 
    datfn1 <- readFile . toFilePath $ testfn1 
    putIOwords ["testfn1 ", showT . s2t $ datfn1 ]
    putIOwords ["\n test idempotent------------\n"::Text]
    let testfn2 = makeAbsFile "/home/frank/Workspace8/replaceUmlaut/testMarkdown0NEW.md":: Path Abs File
    res2 <- runErr $ procMd True erlfn testfn2
    putIOwords [showT res]
    putIOwords ["main2 end ............."::Text]

-- putIOwords 
-- putStrLns = putStrLn . unwordsT 
=======
    putStrLn "main2 start -----------"
    let erlfn = makeAbsFile "/home/frank/Workspace8/replaceUmlaut/nichtUmlaute.txt"
    let testfn0 = makeAbsFile "/home/frank/Workspace8/replaceUmlaut/testMarkdown2.md"
    res <- runErr $  procMd True erlfn testfn0
    putStrLn (show res)
    putStrLn "main2 end ............."
>>>>>>> 82efcab6e4dd6446a219a3c402ffa6695ad2ee1a

-- test_2 = assertEqual 6 9
